
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.PreparedStatement;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author 825151985
 */
public class LivroTela extends javax.swing.JFrame {

    /**
     * Creates new form LivroTela
     */
    public LivroTela() {
        super("Livros");
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GerernciarLivros = new javax.swing.JPanel();
        autorLivroTextField = new javax.swing.JTextField();
        tituloLivroTextField = new javax.swing.JTextField();
        tipoLivroComboBox = new javax.swing.JComboBox<>();
        cadrastarButton = new javax.swing.JButton();
        consultarButton = new javax.swing.JButton();
        alterarButton = new javax.swing.JButton();
        livroscadastradosButton = new javax.swing.JButton();
        removerButton = new javax.swing.JButton();
        cancelarButton = new javax.swing.JButton();
        livrosButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        GerernciarLivros.setBorder(javax.swing.BorderFactory.createTitledBorder("GerenciarLivros"));

        autorLivroTextField.setBorder(javax.swing.BorderFactory.createTitledBorder("Autor"));
        autorLivroTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autorLivroTextFieldActionPerformed(evt);
            }
        });

        tituloLivroTextField.setBorder(javax.swing.BorderFactory.createTitledBorder("Titulo"));
        tituloLivroTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tituloLivroTextFieldActionPerformed(evt);
            }
        });

        tipoLivroComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ciencias e Sociedade", "Sustentabilidade", "Tecnologia" }));

        cadrastarButton.setText("Cadastrar");
        cadrastarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadrastarButtonActionPerformed(evt);
            }
        });

        consultarButton.setText("Consultar");
        consultarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultarButtonActionPerformed(evt);
            }
        });

        alterarButton.setText("Alterar");
        alterarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterarButtonActionPerformed(evt);
            }
        });

        livroscadastradosButton.setText("Livros cadastrados");
        livroscadastradosButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                livroscadastradosButtonActionPerformed(evt);
            }
        });

        removerButton.setText("Remover");
        removerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerButtonActionPerformed(evt);
            }
        });

        cancelarButton.setText("Cancelar");
        cancelarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarButtonActionPerformed(evt);
            }
        });

        livrosButton1.setText("seus livros");
        livrosButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                livrosButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout GerernciarLivrosLayout = new javax.swing.GroupLayout(GerernciarLivros);
        GerernciarLivros.setLayout(GerernciarLivrosLayout);
        GerernciarLivrosLayout.setHorizontalGroup(
            GerernciarLivrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GerernciarLivrosLayout.createSequentialGroup()
                .addGroup(GerernciarLivrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(GerernciarLivrosLayout.createSequentialGroup()
                        .addGroup(GerernciarLivrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(consultarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cadrastarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(GerernciarLivrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(livroscadastradosButton, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                            .addComponent(alterarButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addGroup(GerernciarLivrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(removerButton, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                            .addComponent(cancelarButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(24, 24, 24)
                        .addComponent(livrosButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(GerernciarLivrosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(GerernciarLivrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tituloLivroTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(autorLivroTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(10, Short.MAX_VALUE))
            .addGroup(GerernciarLivrosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tipoLivroComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        GerernciarLivrosLayout.setVerticalGroup(
            GerernciarLivrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GerernciarLivrosLayout.createSequentialGroup()
                .addComponent(autorLivroTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(tituloLivroTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(tipoLivroComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(GerernciarLivrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cadrastarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(alterarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(GerernciarLivrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(consultarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(livroscadastradosButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(livrosButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        autorLivroTextField.getAccessibleContext().setAccessibleName("Digite o nome do Titulo");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(GerernciarLivros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(GerernciarLivros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void livrosButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_livrosButton1ActionPerformed
        String nomeUsuario = SessaoUsuario.getNomeUsuario();

        try {
            String livrosTexto = LivroDAO.listarLivrosTextoPorUsuario(nomeUsuario);
            JOptionPane.showMessageDialog(null, livrosTexto, "Livros do Usuário", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao buscar livros: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_livrosButton1ActionPerformed

    private void cancelarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarButtonActionPerformed
        // TODO add your handling code here:
        LoginTela lt = new LoginTela();
        lt.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_cancelarButtonActionPerformed

    private void removerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerButtonActionPerformed
        String titulo = JOptionPane.showInputDialog(this, "Digite o título do livro que deseja remover:");

        if (titulo != null && !titulo.trim().isEmpty()) {
            try {
                boolean removido = LivroDAO.removerLivro(titulo);
                if (removido) {
                    JOptionPane.showMessageDialog(this, "Livro removido com sucesso!");
                } else {
                    JOptionPane.showMessageDialog(this, "Livro não encontrado.");
                }
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Erro ao remover livro: " + e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Título inválido.");
        }  // TODO add your handling code here:
    }//GEN-LAST:event_removerButtonActionPerformed

    private void livroscadastradosButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_livroscadastradosButtonActionPerformed
        try {
            String resultado = LivroDAO.listarLivrosComoTexto();
            if (resultado.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Nenhum livro encontrado.");
            } else {
                JOptionPane.showMessageDialog(this, resultado);
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro ao listar livros: " + e.getMessage());
        }

    }//GEN-LAST:event_livroscadastradosButtonActionPerformed

    private void alterarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterarButtonActionPerformed

        String autor = autorLivroTextField.getText();   // título usado para localizar o livro
        String titulo = tituloLivroTextField.getText();
        String tipo = (String) tipoLivroComboBox.getSelectedItem();

        String sql = "UPDATE tb_livros SET autor = ?, tipo = ? WHERE titulo = ?";

        try (Connection conn = ConexaoBD.obtemConexao(); PreparedStatement ps = conn.prepareStatement(sql)) {

            ps.setString(1, autor);
            ps.setString(2, tipo);
            ps.setString(3, titulo);

            int linhasAfetadas = ps.executeUpdate();

            if (linhasAfetadas > 0) {
                JOptionPane.showMessageDialog(null, "Livro atualizado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Livro não encontrado para atualizar", "Atenção", JOptionPane.WARNING_MESSAGE);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar livro: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_alterarButtonActionPerformed

    private void consultarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultarButtonActionPerformed

        String titulo = tituloLivroTextField.getText().trim();

        Livro livro = new Livro();
        livro.setTitulo(titulo);

        try {
            if (LivroDAO.consultaLivro(livro)) {
                // Preenche os campos com os dados retornados do banco
                autorLivroTextField.setText(livro.getAutor());
                tipoLivroComboBox.setSelectedItem(livro.getTipo());
            } else {
                JOptionPane.showMessageDialog(null, "Livro não cadastrado", "Atenção", JOptionPane.WARNING_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Problemas técnicos ao consultar livro", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_consultarButtonActionPerformed

    private void cadrastarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadrastarButtonActionPerformed
        // TODO add your handling code here:
        String autor = autorLivroTextField.getText();
        String titulo = tituloLivroTextField.getText();
        String tipo = (String) tipoLivroComboBox.getSelectedItem();

        Livro livro = new Livro(autor, titulo, tipo);
        livro.setNomeUsuario(SessaoUsuario.getNomeUsuario());
        try {
            LivroDAO.cadastraLivro(livro);
            JOptionPane.showMessageDialog(null, "Livro cadastrado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_cadrastarButtonActionPerformed

    private void tituloLivroTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tituloLivroTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tituloLivroTextFieldActionPerformed

    private void autorLivroTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autorLivroTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_autorLivroTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LivroTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LivroTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LivroTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LivroTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LivroTela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel GerernciarLivros;
    private javax.swing.JButton alterarButton;
    private javax.swing.JTextField autorLivroTextField;
    private javax.swing.JButton cadrastarButton;
    private javax.swing.JButton cancelarButton;
    private javax.swing.JButton consultarButton;
    private javax.swing.JButton livrosButton1;
    private javax.swing.JButton livroscadastradosButton;
    private javax.swing.JButton removerButton;
    private javax.swing.JComboBox<String> tipoLivroComboBox;
    private javax.swing.JTextField tituloLivroTextField;
    // End of variables declaration//GEN-END:variables
}
